{"version":3,"sources":["components/Searchbar.js","context/ThemeContext.js","components/hooks/useTheme.js","components/Navbar.js","firebase/config.js","components/RecipeList.js","pages/home/Home.js","pages/create/Create.js","pages/search/Search.js","pages/recipe/Recipe.js","components/ThemeSelector.js","App.js","index.js"],"names":["Search","useState","term","setTerm","navigator","useNavigate","className","onSubmit","e","preventDefault","htmlFor","type","id","value","onChange","target","ThemeContext","createContext","themeReducer","state","action","color","payload","nightMode","ThemeProvider","children","useReducer","dispatch","Provider","changeColor","newCol","changeMode","mode","console","log","useTheme","context","useContext","undefined","Error","Navbar","style","backgroundColor","to","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","firestore","RecipeList","recipes","length","map","recipe","title","cookingTime","method","substring","onClick","collection","doc","delete","Home","data","setData","isLoading","setIsLoading","error","setError","useEffect","unsub","onSnapshot","snapshot","empty","docs","forEach","push","err","message","Create","setTitle","setMethod","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingInputRef","useRef","handleSubmit","a","add","required","ref","ing","trim","includes","prevIng","current","focus","queryString","useLocation","search","query","URLSearchParams","get","setRecipes","then","allDocs","result","filter","t","toLocaleLowerCase","q","Recipe","useParams","navigate","setRecipe","exists","catch","class","ThemeSelector","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc570f5a.chunk.js","sourcesContent":["import \"./Searchbar.css\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function Search() {\r\n  const [term, setTerm] = useState(\"\");\r\n  const navigator = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    navigator(`/search?q=${term}`);\r\n    setTerm(\"\");\r\n  };\r\n  return (\r\n    <div className='searchbar'>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor='search'>Search:</label>\r\n        <input\r\n          type='text'\r\n          id='search'\r\n          value={term}\r\n          onChange={(e) => setTerm(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext, useReducer } from \"react\";\r\n// Initialize context object\r\nexport const ThemeContext = createContext();\r\n\r\n// Reducer function to manipulate state with dispatch actions\r\nfunction themeReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_COLOR\":\r\n      return { ...state, color: action.payload };\r\n    case \"CHANGE_MODE\":\r\n      return { ...state, nightMode: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//function to return privider to wrap children components\r\nexport function ThemeProvider({ children }) {\r\n  const initialState = {\r\n    color: \"#58249c\",\r\n    nightMode: false,\r\n  };\r\n\r\n  // initiate reducer\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  //   dispatch function to manipulate state in reducer function\r\n  const changeColor = (newCol) =>\r\n    dispatch({ type: \"CHANGE_COLOR\", payload: newCol });\r\n  const changeMode = (mode) => {\r\n    console.log(state.nightMode);\r\n    dispatch({ type: \"CHANGE_MODE\", payload: mode });\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={{ ...state, changeColor, changeMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../context/ThemeContext\";\r\n\r\nexport default function useTheme() {\r\n  const context = useContext(ThemeContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"useTheme() function must be used inside a ThemeProvider\");\r\n  }\r\n  return context;\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nimport Searchbar from \"../components/Searchbar\";\r\nimport useTheme from \"./hooks/useTheme\";\r\n\r\nfunction Navbar() {\r\n  const { color } = useTheme();\r\n\r\n  return (\r\n    <div className='navbar' style={{ backgroundColor: color }}>\r\n      <nav>\r\n        <Link to='/' className='brand'>\r\n          <h1>Cooking Ninja</h1>\r\n        </Link>\r\n        <Searchbar />\r\n        <Link to='/create'>Create</Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCGwvo7Qz8dXd_SGvG4GTsUzeDW2aM5wJw\",\r\n  authDomain: \"cooking-ninja-site-a7b92.firebaseapp.com\",\r\n  projectId: \"cooking-ninja-site-a7b92\",\r\n  storageBucket: \"cooking-ninja-site-a7b92.appspot.com\",\r\n  messagingSenderId: \"254491150943\",\r\n  appId: \"1:254491150943:web:fe80ba8e52cd7bd85ea9ea\",\r\n};\r\n\r\n// Initialize firebase with config object\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Initialize firestore\r\nconst projectFirestore = firebase.firestore();\r\n\r\nexport { projectFirestore };\r\n","import { Link } from \"react-router-dom\";\r\nimport useTheme from \"./hooks/useTheme\";\r\nimport \"./RecipeList.css\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nfunction RecipeList({ recipes }) {\r\n  const { nightMode } = useTheme();\r\n\r\n  const deleteRecipe = (id) => {\r\n    projectFirestore.collection(\"recipes\").doc(id).delete();\r\n  };\r\n\r\n  if (recipes.length === 0) {\r\n    return <div className='error'>No recipe found...</div>;\r\n  }\r\n  return (\r\n    <div className='recipe-list'>\r\n      {recipes.map((recipe) => (\r\n        <div className={`card ${nightMode && \"dark-mode\"}`} key={recipe.id}>\r\n          <h3>{recipe.title}</h3>\r\n          <p>{recipe.cookingTime} to make.</p>\r\n          <div>{recipe.method.substring(0, 100)}...</div>\r\n          <Link to={`/recipes/${recipe.id}`}>Cook This</Link>\r\n          <div className='delete' onClick={() => deleteRecipe(recipe.id)}>\r\n            <i className='far fa-trash-alt'></i>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n","import \"./Home.css\";\r\nimport RecipeList from \"../../components/RecipeList\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\n\r\nexport default function Home() {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    const unsub = projectFirestore.collection(\"recipes\").onSnapshot(\r\n      (snapshot) => {\r\n        if (snapshot.empty) {\r\n          setError(\"No recipes found\");\r\n        } else {\r\n          let recipes = [];\r\n          snapshot.docs.forEach((doc) => {\r\n            recipes.push({ id: doc.id, ...doc.data() });\r\n          });\r\n          setIsLoading(false);\r\n          setData(recipes);\r\n        }\r\n      },\r\n      (err) => {\r\n        setError(err.message);\r\n      }\r\n    );\r\n\r\n    // Unsub from component in case it is not mounted and tries to update\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='home'>\r\n      {error && <p className='error'>{error}</p>}\r\n      {isLoading && <p className='loading'>Loading...</p>}\r\n\r\n      {data && <RecipeList recipes={data} />}\r\n    </div>\r\n  );\r\n}\r\n","import \"./Create.css\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\n\r\nfunction Create() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [method, setMethod] = useState(\"\");\r\n  const [cookingTime, setCookingTime] = useState(\"\");\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const ingInputRef = useRef(null);\r\n  const navigator = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const recipe = {\r\n      title,\r\n      method,\r\n      ingredients,\r\n      cookingTime: cookingTime + \" minutes\",\r\n    };\r\n\r\n    try {\r\n      await projectFirestore.collection(\"recipes\").add(recipe);\r\n      navigator(\"/\");\r\n    } catch (err) {\r\n      console.log(\"Failed to upload recipe\");\r\n    }\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    const ing = newIngredient.trim();\r\n\r\n    if (ing && !ingredients.includes(ing)) {\r\n      setIngredients((prevIng) => [...prevIng, ing]);\r\n    }\r\n    setNewIngredient(\"\");\r\n    ingInputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div className='create'>\r\n      <h2 className='page-title'>Add a New Recipe</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Recipe Title:</span>\r\n          <input\r\n            type='text'\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            value={title}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Recipe Ingredients:</span>\r\n          <div className='ingredients'>\r\n            <input\r\n              type='text'\r\n              onChange={(e) => setNewIngredient(e.target.value)}\r\n              value={newIngredient}\r\n              ref={ingInputRef}\r\n            />\r\n            <button className='btn' onClick={handleAdd}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </label>\r\n        {ingredients && (\r\n          <p>\r\n            Current Ingredients:{\" \"}\r\n            {ingredients.map((ing) => (\r\n              <em key={ing}>{ing}, </em>\r\n            ))}\r\n          </p>\r\n        )}\r\n        <label>\r\n          <span>Method</span>\r\n          <textarea\r\n            onChange={(e) => setMethod(e.target.value)}\r\n            value={method}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Cooking Time (minutes):</span>\r\n          <input\r\n            type='number'\r\n            onChange={(e) => setCookingTime(e.target.value)}\r\n            value={cookingTime}\r\n          />\r\n        </label>\r\n        <button className='btn'>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import \"./Search.css\";\r\nimport { useLocation } from \"react-router\";\r\nimport RecipeList from \"../../components/RecipeList\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\n\r\nexport default function Search() {\r\n  const queryString = useLocation().search;\r\n  const queryParams = new URLSearchParams(queryString);\r\n  const query = queryParams.get(\"q\");\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setIsLoading(true);\r\n      projectFirestore\r\n        .collection(\"recipes\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          console.log(snapshot);\r\n          if (snapshot.empty) {\r\n            setIsLoading(false);\r\n            setError(\"No recipe found\");\r\n          }\r\n          let allDocs = [];\r\n          //get all docs and store in array above\r\n          snapshot.docs.forEach((doc) => {\r\n            allDocs.push({ id: doc.id, ...doc.data() });\r\n          });\r\n          // filter doc for query\r\n          const result = allDocs.filter((doc) => {\r\n            let t = doc.title.toLocaleLowerCase();\r\n            let q = query.toLocaleLowerCase();\r\n            if (t.includes(q)) {\r\n              return doc;\r\n            }\r\n          });\r\n          setRecipes(result);\r\n          setIsLoading(false);\r\n        });\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      setError(err.message);\r\n    }\r\n  }, [query]);\r\n  return (\r\n    <div>\r\n      <h2 className='page-title'>Recipes including \"{query}\"</h2>\r\n      {error && <p className='error'>{error}</p>}\r\n      {isLoading && <p className='loading'>Loading...</p>}\r\n      {recipes && <RecipeList recipes={recipes} />}\r\n    </div>\r\n  );\r\n}\r\n","import \"./Recipe.css\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport useTheme from \"../../components/hooks/useTheme\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\n\r\nexport default function Recipe() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { nightMode } = useTheme();\r\n\r\n  const goBack = () => navigate(-1);\r\n  const deleteRecipe = () => {\r\n    projectFirestore\r\n      .collection(\"recipes\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => navigate(\"/\"));\r\n  };\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    projectFirestore\r\n      .collection(\"recipes\")\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          setRecipe(doc.data());\r\n        } else {\r\n          setError(\"Recipe not found\");\r\n        }\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        setError(err.message);\r\n      });\r\n  }, [id]);\r\n  return (\r\n    <div>\r\n      {error && <p className='error'>{error}</p>}\r\n      {isLoading && <p className='loading'>Loading...</p>}\r\n      {recipe && (\r\n        <div className={`recipe ${nightMode ? \"dark-mode\" : \"\"}`}>\r\n          <button className='go-back' onClick={goBack}>\r\n            Back\r\n          </button>\r\n          <div className='delete' onClick={deleteRecipe}>\r\n            <i class='far fa-trash-alt'></i>\r\n          </div>\r\n          <h2 className='page-title'>{recipe.title}</h2>\r\n          <p>{recipe.cookingTime} to cook</p>\r\n          <h4>Ingredients</h4>\r\n          <ul>\r\n            {recipe.ingredients.map((ing) => (\r\n              <li key={ing}>{ing}</li>\r\n            ))}\r\n          </ul>\r\n          <h4>Method:</h4>\r\n          <p className='method'>{recipe.method}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./ThemeSelector.css\";\r\nimport useTheme from \"./hooks/useTheme\";\r\n\r\nexport default function ThemeSelector() {\r\n  const { nightMode, changeMode, changeColor } = useTheme();\r\n  return (\r\n    <div className='theme-selector'>\r\n      <div className='switch' onClick={() => changeMode(!nightMode)}>\r\n        {nightMode ? (\r\n          <i className='fas fa-sun'></i>\r\n        ) : (\r\n          <i className='fas fa-moon'></i>\r\n        )}\r\n      </div>\r\n      <div className='colors'>\r\n        <span className='purple' onClick={() => changeColor(\"#58249c\")}></span>\r\n        <span className='green' onClick={() => changeColor(\"seagreen\")}></span>\r\n        <span className='red' onClick={() => changeColor(\"#b41111\")}></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// Styles\nimport \"./App.css\";\n\n// Components\nimport Navbar from \"./components/Navbar\";\n\n// Routes\nimport Home from \"./pages/home/Home\";\nimport Create from \"./pages/create/Create\";\nimport Search from \"./pages/search/Search\";\nimport Recipe from \"./pages/recipe/Recipe\";\nimport ThemeSelector from \"./components/ThemeSelector\";\nimport useTheme from \"./components/hooks/useTheme\";\n\nfunction App() {\n  const { nightMode } = useTheme();\n  return (\n    <div className={`App ${nightMode ? \"night-mode\" : \"\"}`}>\n      <BrowserRouter>\n        <Navbar />\n        <ThemeSelector />\n        <Routes>\n          <Route exact path='/' element={<Home />} />\n          <Route path='/create' element={<Create />} />\n          <Route path='/recipes/:id' element={<Recipe />} />\n          <Route path='/search' element={<Search />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"./context/ThemeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}